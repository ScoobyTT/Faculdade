#include <iostream>
using namespace std;

struct nodo {
    string nome;
    int info;
    nodo *prox;
};

class pilhaD {
private:
    nodo *topo;
public:
    pilhaD();
    void push(string nome, int info);
    bool pull(string &nome, int &info);
    void print();
};

pilhaD::pilhaD() {
    topo = nullptr;
}

void pilhaD::push(string nome, int info) {
    nodo *novo = new nodo;
    novo->nome = nome;
    novo->info = info;
    novo->prox = topo;
    topo = novo;
}

bool pilhaD::pull(string &nome, int &info) {
    if (topo == nullptr) {
        cout << "Pilha vazia\n";
        return false;
    }
    nodo *aux = topo;
    nome = topo->nome;
    info = topo->info;
    topo = topo->prox;
    delete aux;
    return true;
}

void pilhaD::print() {
    nodo *atual = topo;
    while (atual != nullptr) {
        cout << atual->nome << " " << atual->info << endl;
        atual = atual->prox;
    }
}

int main() {
    pilhaD pilha;
    int amigos;
    string nome;
    int peso;

    cout << "Informe a quantidade de amigos do bilbo:\n";
    cin >> amigos;

    for(int i = 0; i < amigos; i++) {
        cout << "Nome e peso do anão:\n";
        cin >> nome >> peso;
        pilha.push(nome, peso);
    }

    cout << "Conteúdo da pilha (nome e peso):\n";
    pilha.print();

    // Exemplo de desempilhar todos os anões
    cout << "Desempilhando:\n";
    while (pilha.pull(nome, peso)) {
        cout << nome << " saiu da pilha, peso: " << peso << endl;
    }
}
